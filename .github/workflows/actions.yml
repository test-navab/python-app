name: Docker Build and Push

on:
  push:
    branches:
      - live
      - beta

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3


    - name: Login to GitHub Container Registry
      env:
        CR_PAT_SECRET: ${{ secrets.CR_PAT }}
      run: echo $CR_PAT_SECRET | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Set image tags
      id: vars
      run: |
        echo "commit_sha=$(echo $GITHUB_SHA | head -c 8)" >> $GITHUB_ENV


    - name: Build and Push Docker Image
      env:
        REPO_NAME: ${{ github.event.repository.name }}
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/${REPO_NAME}-${BRANCH_NAME}:${{ env.commit_sha }} .
        docker push ghcr.io/${{ github.repository_owner }}/${REPO_NAME}-${BRANCH_NAME}:${{ env.commit_sha }}


    # - name: executing remote ssh commands using ssh key
    #   env:
    #     REPO_NAME: ${{ github.event.repository.name }}
    #   uses: appleboy/ssh-action@v1.2.0
    #   with:
    #     host: 80.248.196.125
    #     username: jenkins
    #     key: ${{ secrets.SSH_PRIVATE_KEY }}
    #     port: 30102
    #     script: ansible-playbook /var/lib/jenkins/cicd/github-actions/main.yaml -e tag=${{ env.commit_sha }} -e ProjectName=${{ env.REPO_NAME }}

    - name: Set environment variables based on branch
      id: set-env
      run: |
        if [ "${{ github.ref_name }}" == "beta" ]; then
          echo "PORT=30111" >> $GITHUB_ENV
          echo "USER_NAME=ubuntu" >> $GITHUB_ENV
        elif [ "${{ github.ref_name }}" == "live" ]; then
          echo "PORT=30121" >> $GITHUB_ENV
          echo "USER_NAME=edexauniverse" >> $GITHUB_ENV
        else
          echo "Unsupported branch: ${{ github.ref_name }}"
          exit 1
        fi


    - name: executing remote ssh commands using ssh key
      env:
        REPO_NAME: ${{ github.event.repository.name }}
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: 80.248.196.125
        username: ${{ env.USER_NAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ env.PORT }}
        script: |
          #!/bin/bash

          # Define variables
          destDir="/home/ubuntu/github-actions/python-app/helmtemplate"
          root="/home/ubuntu/github-actions/python-app"
          ProjectName="${{ env.REPO_NAME }}"
          tag="${{ env.commit_sha }}"

          # Update Chart.yaml
          /usr/local/bin/yq e ".name = \"$ProjectName\"" -i "$destDir/Chart.yaml"
          /usr/local/bin/yq e ".appVersion = \"$tag\"" -i "$destDir/Chart.yaml"

          # Execute collect_host_alias.sh
          /bin/bash "$root/collect_host_alias.sh" "$root"

          # Helm upgrade
          /usr/local/bin/helm upgrade "$ProjectName" --install "$destDir" --set deployment.imagetag="$tag"
